###
# Handles application dependencies and environment variables
# Also syncs the application with the database schema
##
- name: create virtualenv directory if it does not already exist
  file: path={{ venv_dir }} state=directory

- name: install dependencies into a new virtualenv
  pip: requirements={{ app_dir }}/requirements.txt
       virtualenv={{ venv_dir }}

# - name: create .env file in base directory of the app from template
#   template: src=env.j2
#             dest={{ app_dir }}/.env

- name: Django make migrations db
  django_manage: command=makemigrations
                 app_path={{app_dir}}
                 virtualenv={{venv_dir}}

- name: Django migrate db
  django_manage: command=migrate
                 app_path={{app_dir}}
                 virtualenv={{venv_dir}}

# - name: create virtualenv directory if it does not already exist
#   file: path={{ venv_dir }} state=directory
# - name: create static directory for Django app if it does not exist
#   command: mkdir {{app_dir}}/static
#   when: static_dir.stat.isdir is not defined

- name: Django collectstatic
  django_manage: command=collectstatic
                app_path={{app_dir}}
                virtualenv={{venv_dir}}


# - name: Django Generate Reports
#   django_manage: command: "jenkins --enable-coverage"
#     app_path: "{{ app_dir }}"
#     virtualenv={{venv_dir}}
# - django_manage:
#     command: "jenkins --enable-coverage"
#     app_path: "{{ app_dir }}"


- name: Create coverage and pylint reports
  django_manage: command=jenkins
                app_path={{app_dir}}
                virtualenv={{venv_dir}}
